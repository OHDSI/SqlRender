From,To,Pattern,Replacement
"sql server","oracle","INSERT INTO @table (@columns) VALUES (@values1),(@values2)","<start_of_insert> INSERT INTO @table (@columns) VALUES (INTO @table <par_open>@columns<par_close> VALUES <par_open>@values1<par_close>\n INTO @table <par_open>@columns<par_close> VALUES <par_open>@values2<par_close>\n)"
"sql server","oracle","INTO @table <par_open>@columns<par_close> VALUES <par_open>INTO @table <par_open>@columns<par_close> VALUES","INTO @table <par_open>@columns<par_close> VALUES"
"sql server","oracle","<start_of_insert> @a INSERT INTO @table (@columns) VALUES (@b)","INSERT ALL\n@bSELECT * FROM dual"
"sql server","oracle","<par_open>","("
"sql server","oracle","<par_close>",")"
"sql server","oracle","EXCEPT","MINUS"
"sql server","oracle","DATEADD(d,@days,@date)","(@date + @days)"
"sql server","oracle","DATEADD(dd,@days,@date)","(@date + @days)"
"sql server","oracle","DATEADD(day,@days,@date)","(@date + @days)"
"sql server","oracle","DATEADD(month,@months,@date)","ADD_MONTHS(@date, @months)"
"sql server","oracle","DATEADD(mm,@months,@date)","ADD_MONTHS(@date, @months)"
"sql server","oracle","DATEADD(m,@months,@date)","ADD_MONTHS(@date, @months)"
"sql server","oracle","DATEADD(year,@years,@date)","ADD_MONTHS(@date, 12 * @years)"
"sql server","oracle","DATEADD(yyyy,@years,@date)","ADD_MONTHS(@date, 12 * @years)"
"sql server","oracle","DATEADD(yy,@years,@date)","ADD_MONTHS(@date, 12 * @years)"
"sql server","oracle","DATEDIFF(day,@start, @end)","(@end - @start)"
"sql server","oracle","DATEDIFF(dd,@start, @end)","(@end - @start)"
"sql server","oracle","DATEDIFF(d,@start, @end)","(@end - @start)"
"sql server","oracle","GETDATE()","SYSDATE"
"sql server","oracle","+ '@a'","|| '@a'"
"sql server","oracle","'@a' +","'@a' ||"
"sql server","oracle","CAST(@a AS varchar(@b)) +","CAST(@a AS varchar(@b)) ||"
"sql server","oracle","+ CAST(@a AS varchar(@b))","|| CAST(@a AS varchar(@b))"
"sql server","oracle","CAST(@a AS varchar) +","CAST(@a AS varchar) ||"
"sql server","oracle","+ CAST(@a AS varchar)","|| CAST(@a AS varchar)"
"sql server","oracle","CAST(@a AS DATE)","TO_DATE(@a, 'yyyymmdd')"
"sql server","oracle","CAST(@a AS VARCHAR(@b))","TO_CHAR(@a)"
"sql server","oracle","CAST(@a AS VARCHAR)","TO_CHAR(@a)"
"sql server","oracle","DATEFROMPARTS(@year,@month,@day)","TO_DATE(TO_CHAR(@year,'0000')||'-'||TO_CHAR(@month,'00')||'-'||TO_CHAR(@day,'00'), 'YYYY-MM-DD')"
"sql server","oracle","DATETIMEFROMPARTS(@year,@month,@day,@hour,@minute,@second,@ms)","TO_DATE(TO_CHAR(@year,'0000')||'-'||TO_CHAR(@month,'00')||'-'||TO_CHAR(@day,'00')||' '||TO_CHAR(@hour,'00')||':'||TO_CHAR(@minute,'00')||':'||TO_CHAR(@second,'00'), 'YYYY-MM-DD HH24:MI:SS')"
"sql server","oracle","YEAR(@date)","EXTRACT(YEAR FROM @date)"
"sql server","oracle","MONTH(@date)","EXTRACT(MONTH FROM @date)"
"sql server","oracle","DAY(@date)","EXTRACT(DAY FROM @date)"
"sql server","oracle","EOMONTH(@date)","LAST_DAY(@date)"
"sql server","oracle","STDEV(@a)","STDDEV(@a)"
"sql server","oracle","VAR(@a)","VARIANCE(@a)"
"sql server","oracle","RAND()","DBMS_RANDOM.VALUE"
"sql server","oracle","CEILING(@a)","CEIL(@a)"
"sql server","oracle","HASHBYTES('MD5',@a)","DBMS_CRYPTO.HASH(@a,2)"
"sql server","oracle","LEN(@a)","LENGTH(@a)"
"sql server","oracle","LEFT(@str,@chars)","SUBSTR(@str,0,@chars)"
"sql server","oracle","RIGHT(@str,@chars)","SUBSTR(@str,-@chars)"
"sql server","oracle","LOG(@expression)","LOG(2.718281828459, @expression)"
"sql server","oracle","LOG10(@expression)","LOG(10,@expression)"
"sql server","oracle","ISNULL(@a,@b)","NVL(@a,@b)"
"sql server","oracle","COUNT_BIG(@a)","COUNT(@a)"
"sql server","oracle","SQUARE(@a)","((@a)*(@a))"
"sql server","oracle","PI()","3.14159265358979"
"sql server","oracle","NEWID()","SYS_GUID()"
"sql server","oracle","CHARINDEX(@a,@b)","INSTR(@b,@a)"
"sql server","oracle","SELECT @a WHERE @b;","SELECT @a FROM DUAL WHERE @b;"
"sql server","oracle","(SELECT @a WHERE @b)","(SELECT @a FROM DUAL WHERE @b)"
"sql server","oracle","SELECT @a;","SELECT @a FROM DUAL;"
"sql server","oracle","(SELECT @a)","(SELECT @a FROM DUAL)"
"sql server","oracle","SELECT @a FROM @b FROM DUAL","SELECT @a FROM @b"
"sql server","oracle","SELECT @a FROM @b FROM DUAL","SELECT @a FROM @b"
"sql server","oracle","IF OBJECT_ID('@table', 'U') IS NULL CREATE TABLE @table (@definition);","BEGIN\n  EXECUTE IMMEDIATE 'CREATE TABLE @table (@definition)';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -955 THEN\n      RAISE;\n    END IF;\nEND;"
"sql server","oracle","IF OBJECT_ID('tempdb..#@table', 'U') IS NOT NULL DROP TABLE #@table;","BEGIN\n  EXECUTE IMMEDIATE 'TRUNCATE TABLE %temp_prefix%%session_id%@table';\n  EXECUTE IMMEDIATE 'DROP TABLE %temp_prefix%%session_id%@table';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -942 THEN\n      RAISE;\n    END IF;\nEND;"
"sql server","oracle","IF OBJECT_ID('@table', 'U') IS NOT NULL DROP TABLE @table;","BEGIN\n  EXECUTE IMMEDIATE 'TRUNCATE TABLE @table';\n  EXECUTE IMMEDIATE 'DROP TABLE @table';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -942 THEN\n      RAISE;\n    END IF;\nEND;"
"sql server","oracle","USE @schema;","ALTER SESSION SET current_schema = @schema;"
"sql server","oracle",".dbo.","."
"sql server","oracle","CREATE CLUSTERED INDEX","CREATE INDEX"
"sql server","oracle","CREATE UNIQUE INDEX @name ON @table (@variable);","BEGIN\n  EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX @name ON @table (@variable)';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -1408 THEN\n      RAISE;\n    END IF;\nEND;"
"sql server","oracle","CREATE UNIQUE CLUSTERED INDEX @name ON @table (@variable);","BEGIN\n  EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX @name ON @table (@variable)';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -1408 THEN\n      RAISE;\n    END IF;\nEND;"
"sql server","oracle","PRIMARY KEY NONCLUSTERED","PRIMARY KEY"
"sql server","oracle","DATETIME","TIMESTAMP"
"sql server","oracle","BIGINT","NUMBER(19)"
"sql server","oracle","VARCHAR(MAX)","CLOB"
"sql server","oracle","WITH @a AS @b SELECT @c INTO @d FROM @e;","CREATE TABLE @d\nAS\nWITH @a AS @b SELECT\n@c\nFROM\n@e;"
"sql server","oracle","WITH @a AS @b INSERT INTO @c SELECT @d;","INSERT INTO @c WITH @a AS @b SELECT @d;"
"sql server","oracle","SELECT @a INTO @b FROM @c;","CREATE TABLE @b AS\nSELECT\n@a\nFROM\n@c;"
"sql server","oracle","SELECT @a INTO @b;","CREATE TABLE @b AS\nSELECT\n@a;"
"sql server","oracle","#","%temp_prefix%%session_id%"
"sql server","postgresql","ROUND(@a,@b)","ROUND(CAST(@a AS NUMERIC),@b)"
"sql server","postgresql","CAST(@a AS DATE)","TO_DATE(@a, 'yyyymmdd')"
"sql server","postgresql","DATEADD(d,@days,@date)","(@date + @days)"
"sql server","postgresql","DATEADD(dd,@days,@date)","(@date + @days)"
"sql server","postgresql","DATEADD(day,@days,@date)","(@date + @days)"
"sql server","postgresql","DATEADD(m,@months,@date)","CAST((@date + @months*INTERVAL'1 month') AS DATE)"
"sql server","postgresql","DATEADD(mm,@months,@date)","CAST((@date + @months*INTERVAL'1 month') AS DATE)"
"sql server","postgresql","DATEADD(month,@months,@date)","CAST((@date + @months*INTERVAL'1 month') AS DATE)"
"sql server","postgresql","DATEADD(yy,@years,@date)","CAST((@date + @years*INTERVAL'1 year') AS DATE)"
"sql server","postgresql","DATEADD(yyyy,@years,@date)","CAST((@date + @years*INTERVAL'1 year') AS DATE)"
"sql server","postgresql","DATEADD(year,@years,@date)","CAST((@date + @years*INTERVAL'1 year') AS DATE)"
"sql server","postgresql","DATEDIFF(d,@start, @end)","(CAST(@end AS DATE) - CAST(@start AS DATE))"
"sql server","postgresql","DATEDIFF(dd,@start, @end)","(CAST(@end AS DATE) - CAST(@start AS DATE))"
"sql server","postgresql","DATEDIFF(day,@start, @end)","(CAST(@end AS DATE) - CAST(@start AS DATE))"
"sql server","postgresql","GETDATE()","CURRENT_DATE"
"sql server","postgresql","+ '@a'","|| '@a'"
"sql server","postgresql","'@a' +","'@a' ||"
"sql server","postgresql","CAST(@a AS varchar(@b)) +","CAST(@a AS varchar(@b)) ||"
"sql server","postgresql","+ CAST(@a AS varchar(@b))","|| CAST(@a AS varchar(@b))"
"sql server","postgresql","CAST(@a AS varchar) +","CAST(@a AS varchar) ||"
"sql server","postgresql","+ CAST(@a AS varchar)","|| CAST(@a AS varchar)"
"sql server","postgresql","DATEFROMPARTS(@year,@month,@day)","TO_DATE(TO_CHAR(@year,'0000')||'-'||TO_CHAR(@month,'00')||'-'||TO_CHAR(@day,'00'), 'YYYY-MM-DD')"
"sql server","postgresql","DATETIMEFROMPARTS(@year,@month,@day,@hour,@minute,@second,@ms)","TO_DATE(TO_CHAR(@year,'0000')||'-'||TO_CHAR(@month,'00')||'-'||TO_CHAR(@day,'00')||' '||TO_CHAR(@hour,'00')||':'||TO_CHAR(@minute,'00')||':'||TO_CHAR(@second,'00'), 'YYYY-MM-DD HH24:MI:SS')"
"sql server","postgresql","YEAR(@date)","EXTRACT(YEAR FROM @date)"
"sql server","postgresql","MONTH(@date)","EXTRACT(MONTH FROM @date)"
"sql server","postgresql","DAY(@date)","EXTRACT(DAY FROM @date)"
"sql server","postgresql","EOMONTH(@date)","(DATE_TRUNC('MONTH', @date) + INTERVAL '1 MONTH - 1 day')::DATE"
"sql server","postgresql","STDEV(@a)","STDDEV(@a)"
"sql server","postgresql","VAR(@a)","VARIANCE(@a)"
"sql server","postgresql","RAND()","RANDOM()"
"sql server","postgresql","HASHBYTES('MD5',@a)","MD5(@a)"
"sql server","postgresql","LEN(@a)","CHAR_LENGTH(@a)"
"sql server","postgresql","CHARINDEX(@a,@b)","STRPOS(@b,@a)"
"sql server","postgresql","LOG(@expression)","LN(@expression)"
"sql server","postgresql","LOG10(@expression)","LOG(10,@expression)"
"sql server","postgresql","ISNULL(@a,@b)","COALESCE(@a,@b)"
"sql server","postgresql","COUNT_BIG(@a)","COUNT(@a)"
"sql server","postgresql","SQUARE(@a)","((@a)*(@a))"
"sql server","postgresql","NEWID()","MD5(RANDOM()::TEXT || CLOCK_TIMESTAMP()::TEXT)"
"sql server","postgresql","USE @schema;","SET search_path TO @schema;"
"sql server","postgresql","IF OBJECT_ID('@table', 'U') IS NULL CREATE TABLE @table (@definition);","CREATE TABLE IF NOT EXISTS @table (@definition);"
"sql server","postgresql","IF OBJECT_ID('@table', 'U') IS NOT NULL DROP TABLE @table;","DROP TABLE IF EXISTS @table;"
"sql server","postgresql","IF OBJECT_ID('tempdb..#@table', 'U') IS NOT NULL DROP TABLE @table;","DROP TABLE IF EXISTS @table;"
"sql server","postgresql",".dbo.","."
"sql server","postgresql","CREATE TABLE #@table (@definition)","CREATE TEMP TABLE @table (@definition)"
"sql server","postgresql","CREATE CLUSTERED INDEX @index_name ON @table (@variable);","CREATE INDEX @index_name ON @table (@variable);\nCLUSTER @table USING @index_name;"
"sql server","postgresql","CREATE UNIQUE CLUSTERED INDEX @index_name ON @table (@variable);","CREATE UNIQUE INDEX @index_name ON @table (@variable);\nCLUSTER @table USING @index_name;"
"sql server","postgresql","PRIMARY KEY NONCLUSTERED","PRIMARY KEY"
"sql server","postgresql","DATETIME","TIMESTAMP"
"sql server","postgresql","VARCHAR(MAX)","TEXT"
"sql server","postgresql","FLOAT","NUMERIC"
"sql server","postgresql","WITH @a AS @b SELECT @c INTO #@d FROM @e;","CREATE TEMP TABLE @d\nAS\nWITH @a AS @b SELECT\n@c\nFROM\n@e;"
"sql server","postgresql","WITH @a AS @b SELECT @c INTO @d FROM @e;","CREATE TABLE @d\nAS\nWITH @a AS @b SELECT\n@c\nFROM\n@e;"
"sql server","postgresql","SELECT @a INTO #@b FROM @c;","CREATE TEMP TABLE @b\nAS\nSELECT\n@a\nFROM\n@c;"
"sql server","postgresql","SELECT @a INTO @b FROM @c;","CREATE TABLE @b AS\nSELECT\n@a\nFROM\n@c;"
"sql server","postgresql","SELECT @a INTO @b;","CREATE TABLE @b AS\nSELECT\n@a;"
"sql server","postgresql","#",""
"sql server","redshift","ROUND(@a,@b)","ROUND(CAST(@a AS FLOAT),@b)"
"sql server","redshift","CAST(@a AS DATE)","TO_DATE(@a, 'yyyymmdd')"
"sql server","redshift","DATEADD(d,@days,@date)","(@date + @days)"
"sql server","redshift","DATEADD(dd,@days,@date)","(@date + @days)"
"sql server","redshift","DATEADD(day,@days,@date)","(@date + @days)"
"sql server","redshift","DATEADD(m,@months,@date)","CAST(ADD_MONTHS(@date,@months) AS DATE)"
"sql server","redshift","DATEADD(mm,@months,@date)","CAST(ADD_MONTHS(@date,@months) AS DATE)"
"sql server","redshift","DATEADD(month,@months,@date)","CAST(ADD_MONTHS(@date,@months) AS DATE)"
"sql server","redshift","DATEDIFF(d,@start, @end)","(@end - @start)"
"sql server","redshift","DATEDIFF(dd,@start, @end)","(@end - @start)"
"sql server","redshift","DATEDIFF(day,@start, @end)","(@end - @start)"
"sql server","redshift","GETDATE()","CURRENT_DATE"
"sql server","redshift","+ '@a'","|| '@a'"
"sql server","redshift","'@a' +","'@a' ||"
"sql server","redshift","CAST(@a AS varchar(@b)) +","CAST(@a AS varchar(@b)) ||"
"sql server","redshift","+ CAST(@a AS varchar(@b))","|| CAST(@a AS varchar(@b))"
"sql server","redshift","CAST(@a AS varchar) +","CAST(@a AS varchar) ||"
"sql server","redshift","+ CAST(@a AS varchar)","|| CAST(@a AS varchar)"
"sql server","redshift","DATEFROMPARTS(@year,@month,@day)","TO_DATE(TO_CHAR(@year,'0000')||'-'||TO_CHAR(@month,'00')||'-'||TO_CHAR(@day,'00'), 'YYYY-MM-DD')"
"sql server","redshift","YEAR(@date)","EXTRACT(YEAR FROM @date)"
"sql server","redshift","MONTH(@date)","EXTRACT(MONTH FROM @date)"
"sql server","redshift","DAY(@date)","EXTRACT(DAY FROM @date)"
"sql server","redshift","STDEV(@a)","STDDEV(@a)"
"sql server","redshift","RAND()","RANDOM()"
"sql server","redshift","HASHBYTES('MD5',@a)","MD5(@a)"
"sql server","redshift","LEN(@a)","CHAR_LENGTH(@a)"
"sql server","redshift","LOG(@expression)","LN(CAST(@expression AS REAL))"
"sql server","redshift","ISNULL(@a,@b)","COALESCE(@a,@b)"
"sql server","redshift","COUNT_BIG(@a)","COUNT(@a)"
"sql server","redshift","USE @schema;","SET search_path TO @schema;"
"sql server","redshift","IF OBJECT_ID('@table', 'U') IS NULL CREATE TABLE @table (@definition);","CREATE TABLE IF NOT EXISTS @table (@definition);"
"sql server","redshift","IF OBJECT_ID('@table', 'U') IS NOT NULL DROP TABLE @table;","DROP TABLE IF EXISTS @table;"
"sql server","redshift","IF OBJECT_ID('tempdb..#@table', 'U') IS NOT NULL DROP TABLE @table;","DROP TABLE IF EXISTS @table;"
"sql server","redshift",".dbo.","."
"sql server","redshift","CREATE TABLE #@table (@definition)","CREATE TEMP TABLE @table (@definition)"
"sql server","redshift","WITH @a AS @b SELECT @c INTO #@d FROM @e;","CREATE TEMP TABLE @d\nAS\nWITH @a AS @b SELECT\n@c\nFROM\n@e;"
"sql server","redshift","WITH @a AS @b SELECT @c INTO @d FROM @e;","CREATE TABLE @d\nAS\nWITH @a AS @b SELECT\n@c\nFROM\n@e;"
"sql server","redshift","SELECT @a INTO #@b FROM @c;","CREATE TEMP TABLE @b\nAS\nSELECT\n@a\nFROM\n@c;"
"sql server","redshift","SELECT @a INTO @b FROM @c;","CREATE TABLE @b AS\nSELECT\n@a\nFROM\n@c;"
"sql server","redshift","SELECT @a INTO @b;","CREATE TABLE @b AS\nSELECT\n@a;"
"sql server","redshift","PRIMARY KEY NONCLUSTERED","PRIMARY KEY"
"sql server","redshift","DATETIME","TIMESTAMP"
"sql server","redshift","#",""
"sql server","pdw","VARCHAR(MAX)","VARCHAR(1000)"
"sql server","pdw","WITH @a AS @b SELECT @c1 subject_id, @c2 INTO @d FROM @e;","CREATE TABLE @d WITH (DISTRIBUTION = HASH(subject_id))\nAS\nWITH @a AS @b SELECT\n@c1 subject_id, @c2\nFROM\n@e;"
"sql server","pdw","WITH @a AS @b SELECT @c1 person_id, @c2 INTO @d FROM @e;","CREATE TABLE @d WITH (DISTRIBUTION = HASH(person_id))\nAS\nWITH @a AS @b SELECT\n@c1 person_id, @c2\nFROM\n@e;"
"sql server","pdw","WITH @a AS @b SELECT @c1 analysis_id, @c2 INTO @d FROM @e;","CREATE TABLE @d WITH (DISTRIBUTION = HASH(analysis_id))\nAS\nWITH @a AS @b SELECT\n@c1 analysis_id, @c2\nFROM\n@e;"
"sql server","pdw","WITH @a AS @b SELECT @c INTO @d FROM @e;","CREATE TABLE @d WITH (DISTRIBUTION = REPLICATE)\nAS\nWITH @a AS @b SELECT\n@c\nFROM\n@e;"
"sql server","pdw","SELECT @a1 subject_id, @a2 INTO @b FROM @c;","CREATE TABLE @b WITH (DISTRIBUTION = HASH(subject_id))\nAS\nSELECT\n@a1 subject_id, @a2\nFROM\n@c;"
"sql server","pdw","SELECT @a1 person_id, @a2 INTO @b FROM @c;","CREATE TABLE @b WITH (DISTRIBUTION = HASH(person_id))\nAS\nSELECT\n@a1 person_id, @a2\nFROM\n@c;"
"sql server","pdw","SELECT @a1 analysis_id, @a2 INTO @b FROM @c;","CREATE TABLE @b WITH (DISTRIBUTION = HASH(analysis_id))\nAS\nSELECT\n@a1 analysis_id, @a2\nFROM\n@c;"
"sql server","pdw","SELECT @a INTO @b FROM @c;","CREATE TABLE @b WITH (DISTRIBUTION = REPLICATE)\nAS\nSELECT\n@a\nFROM\n@c;"
"sql server","pdw","SELECT @a INTO @b;","CREATE TABLE @b WITH (DISTRIBUTION = REPLICATE)\nAS\nSELECT\n@a;"
"sql server","pdw","CREATE TABLE #@a WITH (DISTRIBUTION = @b) AS","CREATE TABLE #@a WITH (LOCATION = USER_DB, DISTRIBUTION = @b) AS"
"sql server","pdw","CREATE TABLE @table (@definition_part1 subject_id @definition_part2);","CREATE TABLE @table (@definition_part1 subject_id @definition_part2)\nWITH (DISTRIBUTION = HASH(subject_id));"
"sql server","pdw","CREATE TABLE @table (@definition_part1 person_id @definition_part2);","CREATE TABLE @table (@definition_part1 person_id @definition_part2)\nWITH (DISTRIBUTION = HASH(person_id));"
"sql server","pdw","CREATE TABLE @table (@definition_part1 analysis_id @definition_part2);","CREATE TABLE @table (@definition_part1 analysis_id @definition_part2)\nWITH (DISTRIBUTION = HASH(analysis_id));"
"sql server","pdw","CREATE TABLE @table (@definition);","CREATE TABLE @table (@definition)\nWITH (DISTRIBUTION = REPLICATE);"
"sql server","pdw","CREATE TABLE #@table (@definition) WITH (DISTRIBUTION = @distribution);","CREATE TABLE #@table (@definition)\nWITH (LOCATION = USER_DB, DISTRIBUTION = @distribution);"
"sql server","pdw","TRUNCATE TABLE ","IF XACT_STATE() = 1 COMMIT; TR*NC*T* TABLE "
"sql server","pdw","DROP TABLE ","IF XACT_STATE() = 1 COMMIT; DR*P TABLE "
"sql server","pdw","CREATE TABLE ","IF XACT_STATE() = 1 COMMIT; CR**T* TABLE "
"sql server","pdw","TR*NC*T*","TRUNCATE"
"sql server","pdw","DR*P","DROP"
"sql server","pdw","CR**T*","CREATE"
"sql server","pdw","IF OBJECT_ID(@a) IS NOT NULL IF XACT_STATE() = 1 COMMIT;","IF XACT_STATE() = 1 COMMIT; IF OBJECT_ID(@a) IS NOT NULL "
"sql server","mysql","DATEADD(d,@days,@date)","DATE_ADD(@date,INTERVAL @days DAY)"
"sql server","mysql","DATEADD(dd,@days,@date)","DATE_ADD(@date,INTERVAL @days DAY)"
"sql server","mysql","DATEADD(day,@days,@date)","DATE_ADD(@date,INTERVAL @days DAY)"
"sql server","mysql","DATEADD(m,@months,@date)","DATE_ADD(@date,INTERVAL @months MONTH)"
"sql server","mysql","DATEADD(mm,@months,@date)","DATE_ADD(@date,INTERVAL @months MONTH)"
"sql server","mysql","DATEADD(month,@months,@date)","DATE_ADD(@date,INTERVAL @months MONTH)"
"sql server","mysql","DATEADD(yy,@years,@date)","DATE_ADD(@date,INTERVAL @years YEAR)"
"sql server","mysql","DATEADD(yyyy,@years,@date)","DATE_ADD(@date,INTERVAL @years YEAR)"
"sql server","mysql","DATEADD(year,@years,@date)","DATE_ADD(@date,INTERVAL @years YEAR)"
"sql server","mysql","DATEDIFF(d,@start, @end)","DATEDIFF(@start,@end)"
"sql server","mysql","DATEDIFF(dd,@start, @end)","DATEDIFF(@start,@end)"
"sql server","mysql","DATEDIFF(day,@start, @end)","DATEDIFF(@start,@end)"
"sql server","mysql","CAST(@a AS VARCHAR(@b))","CAST(@a AS CHAR(@b))"
"sql server","mysql","CAST(@a+@b+@c AS DATE)","CAST(concat(@a,'-',@b,'-',@c) AS DATE)"
"sql server","mysql","RIGHT(@str1+@str2,@chars)","RIGHT(CONCAT(@str1,@str2),@chars)"
"sql server","mysql","GETDATE()","NOW()"
"sql server","mysql","DATEFROMPARTS(@year,@month,@day)"," DATE_ADD(DATE_ADD(MAKEDATE(@year, 1), INTERVAL (@month)-1 MONTH), INTERVAL (@day)-1 DAY)"
"sql server","mysql","EOMONTH(@date)","LAST_DAY(@date)"
"sql server","mysql","STDEV(@a)","STDDEV(@a)"
"sql server","mysql","VAR(@a)","VARIANCE(@a)"
"sql server","mysql","HASHBYTES('MD5',@a)","MD5(@a)"
"sql server","mysql","LEN(@a)","LENGTH(@a)"
"sql server","mysql","COUNT_BIG(@a)","COUNT(@a)"
"sql server","mysql","LOG(@expression)","LN(@expression)"
"sql server","mysql","LOG10(@expression)","LOG(10,@expression)"
"sql server","mysql","SQUARE(@a)","((@a)*(@a))"
"sql server","mysql","IF OBJECT_ID('@table', 'U') IS NULL CREATE TABLE @table (@definition);","CREATE TABLE IF NOT EXISTS @table (@definition);"
"sql server","mysql","IF OBJECT_ID('@table', 'U') IS NOT NULL DROP TABLE @table;","DROP TABLE IF EXISTS @table;"
"sql server","mysql","IF OBJECT_ID('tempdb..#@table', 'U') IS NOT NULL DROP TABLE @table;","DROP TABLE IF EXISTS @table;"
"sql server","mysql","CREATE CLUSTERED INDEX @index_name ON @table (@variable);","CREATE INDEX @index_name ON @table (@variable);"
"sql server","mysql","CREATE UNIQUE CLUSTERED INDEX @index_name ON @table (@variable);","CREATE UNIQUE INDEX @index_name ON @table (@variable);"
"sql server","mysql","PRIMARY KEY NONCLUSTERED","PRIMARY KEY"
"sql server","mysql","VARCHAR(MAX)","TEXT"
"sql server","mysql","FLOAT","NUMERIC"
"sql server","mysql","WITH @tablea (@definitiona) AS @ba, @tableb (@definitionb) as @bb, @tablec (@definitionc) as @bc, @tabled (@definitiond) as @bd SELECT @c INTO #@d FROM @e;","CREATE TABLE IF NOT EXISTS @tablea @ba;CREATE TABLE IF NOT EXISTS @tableb @bb;CREATE TABLE IF NOT EXISTS @tablec @bc; CREATE TABLE IF NOT EXISTS @tabled @bd; CREATE TABLE IF NOT EXISTS @d SELECT @c FROM @e;Drop table @tablea,@tableb,@tablec,@tabled;"
"sql server","mysql","WITH @tablea (@definitiona) AS @ba, @tableb (@definitionb) as @bb, @tablec (@definitionc) as @bc SELECT @c INTO #@d FROM @e;","CREATE TABLE IF NOT EXISTS @tablea @ba;CREATE TABLE IF NOT EXISTS @tableb @bb;CREATE TABLE IF NOT EXISTS @tablec @bc; CREATE TABLE IF NOT EXISTS @d SELECT @c FROM @e;Drop table @tablea,@tableb,@tablec;"
"sql server","mysql","WITH @aa AS @ba, @ab as @bb, @ac as @bc,@ad as @bd SELECT @c INTO #@d FROM @e;","CREATE TABLE IF NOT EXISTS @aa AS @ba;CREATE TABLE IF NOT EXISTS @ab @bb;CREATE TABLE IF NOT EXISTS @ac @bc;CREATE TABLE IF NOT EXISTS @ad @bd; CREATE TABLE IF NOT EXISTS @d SELECT @c FROM @e;Drop table @aa,@ab,@ac,@ad;"
"sql server","mysql","WITH @table (@definition) AS @b SELECT @c INTO #@d FROM @e;","CREATE TABLE IF NOT EXISTS @table @b; CREATE TABLE IF NOT EXISTS @d SELECT @c FROM @e;Drop table @table;"
"sql server","mysql","WITH @a AS @b SELECT @c INTO #@d FROM @e;","CREATE TABLE IF NOT EXISTS @a @b; CREATE TABLE IF NOT EXISTS @d SELECT @c FROM @e;Drop table @a;"
"sql server","mysql","WITH @a AS @b SELECT @c INTO @d FROM @e;","CREATE TABLE IF NOT EXISTS @a @b; CREATE TABLE IF NOT EXISTS @d SELECT @c FROM @e;Drop table @a;"
"sql server","mysql","SELECT @a INTO #@b FROM @c;","CREATE TEMPORARY TABLE @b SELECT @a FROM @c;"
"sql server","mysql","SELECT @a INTO @b FROM @c;","CREATE TABLE @b  SELECT @a FROM @c;"
"sql server","mysql","SELECT @a INTO @b;","CREATE TABLE @b SELECT @a;"
"sql server","mysql","(SELECT @a,@b,@c,@d, ROW_NUMBER() over (PARTITION by @e order by @f) as @g FROM @h group by @i)","(select @a,@b,@c,@d, 0 as @g from @h group by @i)"
"sql server","mysql","SELECT @a,@b,@c,@d, ROW_NUMBER() over (PARTITION by @e order by @f) as @g FROM @h group by @i;","select @a,@b,@c,@d, 0 as @g from @h group by @i;"
"sql server","mysql","(SELECT @a,@b,@c,ROW_NUMBER() over (PARTITION by @d order by @e asc) as @f FROM @g)","(select @a,@b,@c, 0 as @f from @g)"
"sql server","mysql","(SELECT @a,@b, ROW_NUMBER() over (PARTITION by @d order by @e asc) as @f FROM @g)","(select @a,@b, 0 as @f from @g)"
"sql server","mysql","(SELECT @aa, ROW_NUMBER() over (PARTITION by @b order by @o asc) as @c FROM @d)","(select @aa, 0 as @c from @d)"
"sql server","mysql","(SELECT @aa, @ab, row_number() over (order by @b) as @c FROM @d group by @e)","(select @aa, @ab, 0 as @c from @d group by @e)"
"sql server","mysql","(SELECT @aa, @ab, @ac, row_number() over (order by @b) as @c FROM @d group by @e)","(select @aa, @ab,@ac, 0 as @c from @d group by @e)"
"sql server","mysql","IF OBJECT_ID('@table', 'U') IS NULL CREATE TABLE @table (@definition);","CREATE TABLE IF NOT EXISTS @table (@definition);"
"sql server","mysql","IF OBJECT_ID('@table', 'U') IS NOT NULL DROP TABLE @table;","DROP TABLE IF EXISTS @table;"
"sql server","mysql","IF OBJECT_ID('tempdb..#@table', 'U') IS NOT NULL DROP TABLE @table;","DROP TABLE IF EXISTS @table;"
"sql server","mysql",".dbo.","."
"sql server","mysql","(row_number() over (order by @a))","0"
"sql server","mysql","COUNT(@a) over ()","count(@a)"
"sql server","mysql","OBSERVATION_PERIOD","observation_period"
"sql server","mysql","temp_Dates","temp_dates"
"sql server","mysql","PERSON","person"
"sql server","mysql","#",""
"sql server","googlebigquery","DATEDIFF(d,@start, @end)","DATE_DIFF(DATE(@end), DATE(@start), DAY)"
"sql server","googlebigquery","DATEDIFF(dd,@start, @end)","DATE_DIFF(DATE(@end), DATE(@start), DAY)"
"sql server","googlebigquery","DATEDIFF(day,@start, @end)","DATE_DIFF(DATE(@end), DATE(@start), DAY)"
"sql server","googlebigquery","DATEADD(d,@days,@date)","DATE_ADD(DATE(@date), @days, DAY)"
"sql server","googlebigquery","DATEADD(dd,@days,@date)","DATE_ADD(DATE(@date), @days, DAY)"
"sql server","googlebigquery","DATEADD(day,@days,@date)","DATE_ADD(DATE(@date), @days, DAY)"
"sql server","googlebigquery","DATEADD(m,@months,@date)","DATE_ADD(DATE(@date), @months, MONTH)"
"sql server","googlebigquery","DATEADD(mm,@months,@date)","DATE_ADD(DATE(@date), @months, MONTH)"
"sql server","googlebigquery","DATEADD(month,@months,@date)","DATE_ADD(DATE(@date), @months, MONTH)"
"sql server","googlebigquery","GETDATE()","CURRENT_DATE()"
"sql server","googlebigquery","YEAR(@date)","EXTRACT(YEAR from @date)"
"sql server","googlebigquery","MONTH(@date)","EXTRACT(MONTH from @date)"
"sql server","googlebigquery","DAY(@date)","EXTRACT(DAY from @date)"
"sql server","googlebigquery","DATETIME","TIMESTAMP"
"sql server","googlebigquery","STDEV(@a)","STDDEV(@a)"
"sql server","googlebigquery","VAR(@a)","VARIANCE(@a)"
"sql server","googlebigquery","HASHBYTES('MD5',@a)","SHA1(@a)"
"sql server","googlebigquery","LEN(@a)","LENGTH(@a)"
"sql server","googlebigquery","COUNT_BIG(@a)","COUNT(@a)"
"sql server","googlebigquery","float",":float_temp"
"sql server","googlebigquery",":float_temp",":float"
"sql server","googlebigquery","varchar(@a)",":string"
"sql server","googlebigquery","varchar",":string"
"sql server","googlebigquery","bigint",":integer"
"sql server","googlebigquery","int",":integer"
"sql server","googlebigquery","CAST(@a as:string)","CAST(@a as string)"
"sql server","googlebigquery","CAST(@a as:integer)","CAST(@a as int64)"
"sql server","googlebigquery","CAST(@a as:float)","CAST(@a as float64)"
"sql server","googlebigquery","('@a')","'@a'"
"sql server","googlebigquery","'@a' + '@b'","CONCAT('@a','@b')"
"sql server","googlebigquery","CONCAT(@a) + CONCAT(@b)","CONCAT(@a,@b)"
"sql server","googlebigquery","CONCAT(@a) + '@b'","CONCAT(@a,'@b')"
"sql server","googlebigquery","'@a' + CONCAT(@b)","CONCAT('@a',@b)"
"sql server","googlebigquery","'@a'+@b,@c+","CONCAT('@a',@b),@c+"
"sql server","googlebigquery","'@a'+@b+@c,","CONCAT('@a',@b)+@c,"
"sql server","googlebigquery","'@a' + @b +","CONCAT('@a',@b)+"
"sql server","googlebigquery","'@a'+@b as @c,","CONCAT('@a',@b) as @c,"
"sql server","googlebigquery","'@a'+@b,@c as","CONCAT('@a',@b),@c as"
"sql server","googlebigquery","'@a' + @b as","CONCAT('@a',@b) as"
"sql server","googlebigquery","'@a' + @b,","CONCAT('@a',@b),"
"sql server","googlebigquery","'@a'+@b) from","CONCAT('@a',@b)) from"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery","'@a' + @b from","CONCAT('@a',@b) from"
"sql server","googlebigquery","'@a'+@b) as","CONCAT('@a',@b)) as"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery","'@a'+@b)@d,","CONCAT('@a',@b))@d,"
"sql server","googlebigquery","'@a' + @b)","CONCAT('@a',@b))"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery","'@a' + @b;","CONCAT('@a',@b);"
"sql server","googlebigquery","CONCAT(@a)+@b,@c+","CONCAT(@a,@b),@c+"
"sql server","googlebigquery","CONCAT(@a) + @b +","CONCAT(@a,@b)+"
"sql server","googlebigquery","CONCAT(@a)+@b as @c,","CONCAT(@a,@b)as @c,"
"sql server","googlebigquery","CONCAT(@a)+@b,@c as","CONCAT(@a,@b),@c as"
"sql server","googlebigquery","CONCAT(@a) + @b as","CONCAT(@a,@b) as"
"sql server","googlebigquery","CONCAT(@a) + @b,","CONCAT(@a,@b),"
"sql server","googlebigquery","CONCAT(@a)+@b) from","CONCAT(@a,@b)) from"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery","CONCAT(@a) + @b from","CONCAT(@a,@b) from"
"sql server","googlebigquery","CONCAT(@a)+@b) as","CONCAT(@a,@b)) as"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery","CONCAT(@a)+@b)@d,","CONCAT(@a,@b))@d,"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery","CONCAT(@a) + @b)","CONCAT(@a,@b))"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery","CONCAT(@a) + @b;","CONCAT(@a,@b);"
"sql server","googlebigquery","+@a,@b+'@c'","+@a,CONCAT(@b,'@c')"
"sql server","googlebigquery",",(@a+@b+'@c'",",(@a+CONCAT(@b,'@c')"
"sql server","googlebigquery",",(@a+'@b'",",(CONCAT(@a,'@b')"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery","(@a,@b+'@c'","(@a,CONCAT(@b,'@c')"
"sql server","googlebigquery",",@a+@b+'@c'",",@a+CONCAT(@b,'@c')"
"sql server","googlebigquery","+(@a+'@b'","+(CONCAT(@a,'@b')"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery","(@a+@b+'@c'","(@a+CONCAT(@b,'@c')"
"sql server","googlebigquery","+select @a+'@b'","+select CONCAT(@a,'@b')"
"sql server","googlebigquery","select @a+@b+'@c'","select @a+CONCAT(@b,'@c')"
"sql server","googlebigquery","+@a+'@b'","+CONCAT(@a,'@b')"
"sql server","googlebigquery","select (@a+'@b'","select (CONCAT(@a,'@b')"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery","(select @a+'@b'","(select CONCAT(@a,'@b')"
"sql server","googlebigquery","(@a+'@b'","(CONCAT(@a,'@b')"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery",",@a,@b+'@c'",",@a,CONCAT(@b,'@c')"
"sql server","googlebigquery",",select @a+'@b'",",select CONCAT(@a,'@b')"
"sql server","googlebigquery","select @a,@b+'@c'","select @a,CONCAT(@b,'@c')"
"sql server","googlebigquery",",@a+'@b'",",CONCAT(@a,'@b')"
"sql server","googlebigquery","select @a+'@b'","select CONCAT(@a,'@b')"
"sql server","googlebigquery","+@a,@b+CONCAT(@c)","+@a,CONCAT(@b,@c)"
"sql server","googlebigquery",",(@a+@b+CONCAT(@c)",",(@a+CONCAT(@b,@c)"
"sql server","googlebigquery",",(@a+CONCAT(@b)",",(CONCAT(@a,@b)"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery","(@a,@b+CONCAT(@c)","(@a,CONCAT(@b,@c)"
"sql server","googlebigquery",",@a+@b+CONCAT(@c)",",@a+CONCAT(@b,@c)"
"sql server","googlebigquery","+(@a+CONCAT(@b)","+(CONCAT(@a,@b)"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery","(@a+@b+CONCAT(@c)","(@a+CONCAT(@b,@c)"
"sql server","googlebigquery","+select @a+CONCAT(@b)","+select CONCAT(@a,@b)"
"sql server","googlebigquery","select @a+@b+CONCAT(@c)","select @a+CONCAT(@b,@c)"
"sql server","googlebigquery","+@a+CONCAT(@b)","+CONCAT(@a,@b)"
"sql server","googlebigquery","select (@a+CONCAT(@b)","select (CONCAT(@a,@b)"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery","(select @a+CONCAT(@c)","(select CONCAT(@a,@b)"
"sql server","googlebigquery","(@a+CONCAT(@b)","(CONCAT(@a,@b)"
"sql server","googlebigquery","(CONCAT(@a))","CONCAT(@a)"
"sql server","googlebigquery",",@a,@b+CONCAT(@c)",",@a,CONCAT(@b,@c)"
"sql server","googlebigquery",",select @a+CONCAT(@b)",",select CONCAT(@a,@b)"
"sql server","googlebigquery","select @a,@b+CONCAT(@c)","select @a,CONCAT(@b,@c)"
"sql server","googlebigquery",",@a+CONCAT(@b)",",CONCAT(@a,@b)"
"sql server","googlebigquery","select @a+CONCAT(@b)","select CONCAT(@a,@b)"
"sql server","googlebigquery","#",""
"sql server","googlebigquery","insert into @table (@column1,@column2,@column3,@column4,@column5,@column6, @column7) values (@value1,@value2,@value3,@value4,@value5,@value6, @value7);","bq query --use_legacy_sql=false --append=true --destination_table=@table \"select @value1 as @column1, @value2 as @column2, @value3 as @column3, @value4 as @column4, @value5 as @column5, @value6 as @column6, @value7 as @column7\"\n"
"sql server","googlebigquery","insert into @table (@column1,@column2,@column3,@column4,@column5,@column6) values (@value1,@value2,@value3,@value4,@value5,@value6);","bq query --use_legacy_sql=false --append=true --destination_table=@table \"select @value1 as @column1, @value2 as @column2, @value3 as @column3, @value4 as @column4, @value5 as @column5, @value6 as @column6\"\n"
"sql server","googlebigquery","insert into @table (@column1,@column2,@column3,@column4,@column5) values (@value1,@value2,@value3,@value4,@column5);","bq query --use_legacy_sql=false --append=true --destination_table=@table \"select @value1 as @column1, @value2 as @column2, @value3 as @column3, @value4 as @column4, @value5 as @column5\"\n"
"sql server","googlebigquery","insert into @table (@column1,@column2,@column3,@column4) values (@value1,@value2,@value3,@value4);","bq query --use_legacy_sql=false --append=true --destination_table=@table \"select @value1 as @column1, @value2 as @column2, @value3 as @column3, @value4 as @column4\"\n"
"sql server","googlebigquery","insert into @table (@column1,@column2,@column3) values (@value1,@value2,@value3);","bq query --use_legacy_sql=false --append=true --destination_table=@table \"select @value1 as @column1, @value2 as @column2, @value3 as @column3\"\n"
"sql server","googlebigquery","insert into @table (@column1,@column2) values (@value1,@value2);","bq query --use_legacy_sql=false --append=true --destination_table=@table \"select @value1 as @column1, @value2 as @column2\"\n"
"sql server","googlebigquery","insert into @table (@column) values (@value);","bq query --use_legacy_sql=false --append=true --destination_table=@table \"select @value as @column\"\n"
"sql server","googlebigquery","create table @table (@columns);","bq mk --schema '@columns' -t @table"
"sql server","googlebigquery","insert into @table1 (@columns) select @values from @table2 group by @param;","bq query --use_legacy_sql=false --append=true --destination_table=@table1 \"select @values from @table2 group by @param\"\n"
"sql server","googlebigquery","insert into @table1 (@columns) select @values from @table where @condition;","bq query --use_legacy_sql=false --append=true --destination_table=@table1 \"select @values from @table where @condition\"\n"
"sql server","googlebigquery","insert into @table1 (@columns) select @values from @table2;","bq query --use_legacy_sql=false --append=true --destination_table=@table1 \"select @values from @table2\"\n"
"sql server","googlebigquery","with @table1 (@columns) as (select @values from @table2)","bq rm -f -t @table1\n\nbq query --use_legacy_sql=false  --append=true --destination_table=@table1 \"select @values from @table2\"\n\n"
"sql server","googlebigquery",",@table1 (@columns) as (select @values FROM @table2)","bq rm -f -t @table1\n\nbq query --use_legacy_sql=false --append=true --destination_table=@table1 \"select @values from @table2\"\n\n"
"sql server","googlebigquery","select @values INTO @table1 from @table2;","bq query --use_legacy_sql=false --append=true --destination_table=@table1 \"select @values from @table2\"\n"
"sql server","googlebigquery","truncate table @table;","#No support for truncate\n"
"sql server","googlebigquery","drop table @table;","bq rm -f -t @table\n"








