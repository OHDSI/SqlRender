From,To,Pattern,Replacement
"sql server","oracle","INSERT INTO @table (@columns) VALUES (@values1),(@values2)","<start_of_insert> INSERT INTO @table (@columns) VALUES (INTO @table <par_open>@columns<par_close> VALUES <par_open>@values1<par_close>\n INTO @table <par_open>@columns<par_close> VALUES <par_open>@values2<par_close>\n)"
"sql server","oracle","INTO @table <par_open>@columns<par_close> VALUES <par_open>INTO @table <par_open>@columns<par_close> VALUES","INTO @table <par_open>@columns<par_close> VALUES"
"sql server","oracle","<start_of_insert> @a INSERT INTO @table (@columns) VALUES (@b)","INSERT ALL\n@bSELECT * FROM dual"
"sql server","oracle","<par_open>","("
"sql server","oracle","<par_close>",")"
"sql server","oracle","DATEADD(d,@days,@date)","(@date + @days)"
"sql server","oracle","DATEADD(dd,@days,@date)","(@date + @days)"
"sql server","oracle","DATEADD(day,@days,@date)","(@date + @days)"
"sql server","oracle","DATEADD(month,@months,@date)","ADD_MONTHS(@date, @months)"
"sql server","oracle","DATEADD(mm,@months,@date)","ADD_MONTHS(@date, @months)"
"sql server","oracle","DATEADD(m,@months,@date)","ADD_MONTHS(@date, @months)"
"sql server","oracle","DATEADD(year,@years,@date)","ADD_MONTHS(@date, 12 * @years)"
"sql server","oracle","DATEADD(yyyy,@years,@date)","ADD_MONTHS(@date, 12 * @years)"
"sql server","oracle","DATEADD(yy,@years,@date)","ADD_MONTHS(@date, 12 * @years)"
"sql server","oracle","DATEDIFF(day,@start, @end)","(@end - @start)"
"sql server","oracle","DATEDIFF(dd,@start, @end)","(@end - @start)"
"sql server","oracle","DATEDIFF(d,@start, @end)","(@end - @start)"
"sql server","oracle","GETDATE()","SYSDATE"
"sql server","oracle","CAST(@a AS DATE)","TO_DATE(@a, 'yyyymmdd')"
"sql server","oracle","CAST(@a AS VARCHAR(@b))","TO_CHAR(@a)"
"sql server","oracle","CAST(@a AS VARCHAR)","TO_CHAR(@a)"
"sql server","oracle","+ '@a'","|| '@a'"
"sql server","oracle","'@a' +","'@a' ||"
"sql server","oracle","TO_CHAR(@a) +","TO_CHAR(@a) ||"
"sql server","oracle","+ TO_CHAR(@a)","|| TO_CHAR(@a)"
"sql server","oracle","YEAR(@date)","EXTRACT(YEAR FROM @date)"
"sql server","oracle","MONTH(@date)","EXTRACT(MONTH FROM @date)"
"sql server","oracle","STDEV(@a)","STDDEV(@a)"
"sql server","oracle","LEN(@a)","LENGTH(@a)"
"sql server","oracle","LEFT(@str,@chars)","SUBSTR(@str,0,@chars)"
"sql server","oracle","RIGHT(@str,@chars)","SUBSTR(@str,-@chars)"
"sql server","oracle","LOG(@expression)","LOG(2.718281828459, @expression)"
"sql server","oracle","ISNULL(@a,@b)","NVL(@a,@b)"
"sql server","oracle","COUNT_BIG(@a)","COUNT(@a)"
"sql server","oracle","SELECT @a WHERE @b;","SELECT @a FROM\n  DUAL\nWHERE@b;"
"sql server","oracle","SELECT @a FROM @b FROM DUAL WHERE @c;","SELECT @a FROM @b WHERE @c;"
"sql server","oracle","IF OBJECT_ID('@table', 'U') IS NOT NULL DROP TABLE @table;","BEGIN\n  EXECUTE IMMEDIATE 'TRUNCATE TABLE @table';\n  EXECUTE IMMEDIATE 'DROP TABLE @table';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -942 THEN\n      RAISE;\n    END IF;\nEND;"
"sql server","oracle","USE @schema;","ALTER SESSION SET current_schema = @schema;"
"sql server","oracle",".dbo.","."
"sql server","oracle","CREATE TABLE #@table (@definition)","CREATE GLOBAL TEMPORARY TABLE @table (@definition) ON COMMIT PRESERVE ROWS"
"sql server","oracle","CREATE CLUSTERED INDEX","CREATE INDEX"
"sql server","oracle","CREATE UNIQUE INDEX @name ON @table (@variable);","BEGIN\n  EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX @name ON @table (@variable)';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -1408 THEN\n      RAISE;\n    END IF;\nEND;"
"sql server","oracle","CREATE UNIQUE CLUSTERED INDEX @name ON @table (@variable);","BEGIN\n  EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX @name ON @table (@variable)';\nEXCEPTION\n  WHEN OTHERS THEN\n    IF SQLCODE != -1408 THEN\n      RAISE;\n    END IF;\nEND;"
"sql server","oracle","PRIMARY KEY NONCLUSTERED","PRIMARY KEY"
"sql server","oracle","BIGINT","NUMBER(19)"
"sql server","oracle","VARCHAR(MAX)","CLOB"
"sql server","oracle","WITH @a AS @b SELECT @c INTO #@d FROM @e;","CREATE GLOBAL TEMPORARY TABLE @d ON COMMIT PRESERVE ROWS\nAS\nWITH @a AS @b SELECT\n@c\nFROM\n@e;"
"sql server","oracle","WITH @a AS @b SELECT @c INTO @d FROM @e;","CREATE TABLE @d\nAS\nWITH @a AS @b SELECT\n@c\nFROM\n@e;"
"sql server","oracle","WITH @a AS @b INSERT INTO @c SELECT @d;","INSERT INTO @c WITH @a AS @b SELECT @d;"
"sql server","oracle","SELECT @a INTO #@b FROM @c;","CREATE GLOBAL TEMPORARY TABLE @b ON COMMIT PRESERVE ROWS\nAS\nSELECT\n@a\nFROM\n@c;"
"sql server","oracle","SELECT @a INTO @b FROM @c;","CREATE TABLE @b AS\nSELECT\n@a\nFROM\n@c;"
"sql server","oracle","#",""
"sql server","postgresql","ROUND(@a,@b)","ROUND(CAST(@a AS NUMERIC),@b)"
"sql server","postgresql","CAST(@a AS DATE)","TO_DATE(@a, 'yyyymmdd')"
"sql server","postgresql","DATEADD(d,@days,@date)","(@date + @days)"
"sql server","postgresql","DATEADD(dd,@days,@date)","(@date + @days)"
"sql server","postgresql","DATEADD(day,@days,@date)","(@date + @days)"
"sql server","postgresql","DATEADD(m,@months,@date)","CAST((@date + @months*INTERVAL'1 month') AS DATE)"
"sql server","postgresql","DATEADD(mm,@months,@date)","CAST((@date + @months*INTERVAL'1 month') AS DATE)"
"sql server","postgresql","DATEADD(month,@months,@date)","CAST((@date + @months*INTERVAL'1 month') AS DATE)"
"sql server","postgresql","DATEADD(yy,@years,@date)","CAST((@date + @years*INTERVAL'1 year') AS DATE)"
"sql server","postgresql","DATEADD(yyyy,@years,@date)","CAST((@date + @years*INTERVAL'1 year') AS DATE)"
"sql server","postgresql","DATEADD(year,@years,@date)","CAST((@date + @years*INTERVAL'1 year') AS DATE)"
"sql server","postgresql","DATEDIFF(d,@start, @end)","(CAST(@end AS DATE) - CAST(@start AS DATE))"
"sql server","postgresql","DATEDIFF(dd,@start, @end)","(CAST(@end AS DATE) - CAST(@start AS DATE))"
"sql server","postgresql","DATEDIFF(day,@start, @end)","(CAST(@end AS DATE) - CAST(@start AS DATE))"
"sql server","postgresql","GETDATE()","CURRENT_DATE"
"sql server","postgresql","+ '@a'","|| '@a'"
"sql server","postgresql","'@a' +","'@a' ||"
"sql server","postgresql","CAST(@a AS varchar(@b)) +","CAST(@a AS varchar(@b)) ||"
"sql server","postgresql","+ CAST(@a AS varchar(@b))","|| CAST(@a AS varchar(@b))"
"sql server","postgresql","YEAR(@date)","EXTRACT(YEAR FROM @date)"
"sql server","postgresql","MONTH(@date)","EXTRACT(MONTH FROM @date)"
"sql server","postgresql","STDEV(@a)","STDDEV(@a)"
"sql server","postgresql","LEN(@a)","CHAR_LENGTH(@a)"
"sql server","postgresql","LOG(@expression)","LN(@expression)"
"sql server","postgresql","ISNULL(@a,@b)","COALESCE(@a,@b)"
"sql server","postgresql","COUNT_BIG(@a)","COUNT(@a)"
"sql server","postgresql","USE @schema;","SET search_path TO @schema;"
"sql server","postgresql","IF OBJECT_ID('@table', 'U') IS NOT NULL DROP TABLE @table;","DROP TABLE IF EXISTS @table;"
"sql server","postgresql",".dbo.","."
"sql server","postgresql","CREATE TABLE #@table (@definition)","CREATE TEMP TABLE @table (@definition)"
"sql server","postgresql","CREATE CLUSTERED INDEX @index_name ON @table (@variable);","CREATE INDEX @index_name ON @table (@variable);\nCLUSTER @table USING @index_name;"
"sql server","postgresql","CREATE UNIQUE CLUSTERED INDEX @index_name ON @table (@variable);","CREATE UNIQUE INDEX @index_name ON @table (@variable);\nCLUSTER @table USING @index_name;"
"sql server","postgresql","PRIMARY KEY NONCLUSTERED","PRIMARY KEY"
"sql server","postgresql","VARCHAR(MAX)","TEXT"
"sql server","postgresql","FLOAT","NUMERIC"
"sql server","postgresql","WITH @a AS @b SELECT @c INTO #@d FROM @e;","CREATE TEMP TABLE @d\nAS\nWITH @a AS @b SELECT\n@c\nFROM\n@e;"
"sql server","postgresql","WITH @a AS @b SELECT @c INTO @d FROM @e;","CREATE TABLE @d\nAS\nWITH @a AS @b SELECT\n@c\nFROM\n@e;"
"sql server","postgresql","SELECT @a INTO #@b FROM @c;","CREATE TEMP TABLE @b\nAS\nSELECT\n@a\nFROM\n@c;"
"sql server","postgresql","SELECT @a INTO @b FROM @c;","CREATE TABLE @b AS\nSELECT\n@a\nFROM\n@c;"
"sql server","postgresql","#",""
"sql server","redshift","ROUND(@a,@b)","ROUND(CAST(@a AS NUMERIC),@b)"
"sql server","redshift","CAST(@a AS DATE)","TO_DATE(@a, 'yyyymmdd')"
"sql server","redshift","DATEADD(d,@days,@date)","(@date + @days)"
"sql server","redshift","DATEADD(dd,@days,@date)","(@date + @days)"
"sql server","redshift","DATEADD(day,@days,@date)","(@date + @days)"
"sql server","redshift","DATEADD(m,@months,@date)","CAST(ADD_MONTHS(@date,@months) AS DATE)"
"sql server","redshift","DATEADD(mm,@months,@date)","CAST(ADD_MONTHS(@date,@months) AS DATE)"
"sql server","redshift","DATEADD(month,@months,@date)","CAST(ADD_MONTHS(@date,@months) AS DATE)"
"sql server","redshift","DATEDIFF(d,@start, @end)","(@end - @start)"
"sql server","redshift","DATEDIFF(dd,@start, @end)","(@end - @start)"
"sql server","redshift","DATEDIFF(day,@start, @end)","(@end - @start)"
"sql server","redshift","GETDATE()","CURRENT_DATE"
"sql server","redshift","+ '@a'","|| '@a'"
"sql server","redshift","'@a' +","'@a' ||"
"sql server","redshift","CAST(@a AS varchar(@b)) +","CAST(@a AS varchar(@b)) ||"
"sql server","redshift","+ CAST(@a AS varchar(@b))","|| CAST(@a AS varchar(@b))"
"sql server","redshift","YEAR(@date)","EXTRACT(YEAR FROM @date)"
"sql server","redshift","MONTH(@date)","EXTRACT(MONTH FROM @date)"
"sql server","redshift","STDEV(@a)","STDDEV(@a)"
"sql server","redshift","LEN(@a)","CHAR_LENGTH(@a)"
"sql server","redshift","LOG(@expression)","LN(CAST(@expression AS REAL))"
"sql server","redshift","ISNULL(@a,@b)","COALESCE(@a,@b)"
"sql server","redshift","COUNT_BIG(@a)","COUNT(@a)"
"sql server","redshift","USE @schema;","SET search_path TO @schema;"
"sql server","redshift","IF OBJECT_ID('@table', 'U') IS NOT NULL DROP TABLE @table;","DROP TABLE IF EXISTS @table;"
"sql server","redshift",".dbo.","."
"sql server","redshift","CREATE TABLE #@table (@definition)","CREATE TEMP TABLE @table (@definition)"
"sql server","redshift","WITH @a AS @b SELECT @c INTO #@d FROM @e;","CREATE TEMP TABLE @d\nAS\nWITH @a AS @b SELECT\n@c\nFROM\n@e;"
"sql server","redshift","WITH @a AS @b SELECT @c INTO @d FROM @e;","CREATE TABLE @d\nAS\nWITH @a AS @b SELECT\n@c\nFROM\n@e;"
"sql server","redshift","SELECT @a INTO #@b FROM @c;","CREATE TEMP TABLE @b\nAS\nSELECT\n@a\nFROM\n@c;"
"sql server","redshift","SELECT @a INTO @b FROM @c;","CREATE TABLE @b AS\nSELECT\n@a\nFROM\n@c;"
"sql server","redshift","PRIMARY KEY NONCLUSTERED","PRIMARY KEY"
"sql server","redshift","FLOAT","NUMERIC"
"sql server","redshift","#",""
"sql server","netezza","ROUND(@a,@b)","ROUND(CAST(@a AS NUMERIC),@b)"
"sql server","netezza","CAST(@a AS DATE)","TO_DATE(@a, 'yyyymmdd')"
"sql server","netezza","DATEADD(d,@days,@date)","(@date + @days)"
"sql server","netezza","DATEADD(dd,@days,@date)","(@date + @days)"
"sql server","netezza","DATEADD(day,@days,@date)","(@date + @days)"
"sql server","netezza","DATEADD(m,@months,@date)","CAST((@date + @months*INTERVAL'1 month') AS DATE)"
"sql server","netezza","DATEADD(mm,@months,@date)","CAST((@date + @months*INTERVAL'1 month') AS DATE)"
"sql server","netezza","DATEADD(month,@months,@date)","CAST((@date + @months*INTERVAL'1 month') AS DATE)"
"sql server","netezza","DATEADD(yy,@years,@date)","CAST((@date + @years*INTERVAL'1 year') AS DATE)"
"sql server","netezza","DATEADD(yyyy,@years,@date)","CAST((@date + @years*INTERVAL'1 year') AS DATE)"
"sql server","netezza","DATEADD(year,@years,@date)","CAST((@date + @years*INTERVAL'1 year') AS DATE)"
"sql server","netezza","DATEDIFF(d,@start, @end)","(CAST(@end AS DATE) - CAST(@start AS DATE))"
"sql server","netezza","DATEDIFF(dd,@start, @end)","(CAST(@end AS DATE) - CAST(@start AS DATE))"
"sql server","netezza","DATEDIFF(day,@start, @end)","(CAST(@end AS DATE) - CAST(@start AS DATE))"
"sql server","netezza","GETDATE()","CURRENT_DATE"
"sql server","netezza","+ '@a'","|| '@a'"
"sql server","netezza","'@a' +","'@a' ||"
"sql server","netezza","CAST(@a AS varchar(@b)) +","CAST(@a AS varchar(@b)) ||"
"sql server","netezza","+ CAST(@a AS varchar(@b))","|| CAST(@a AS varchar(@b))"
"sql server","netezza","YEAR(@date)","EXTRACT(YEAR FROM @date)"
"sql server","netezza","MONTH(@date)","EXTRACT(MONTH FROM @date)"
"sql server","netezza","STDEV(@a)","STDDEV(@a)"
"sql server","netezza","LEN(@a)","CHAR_LENGTH(@a)"
"sql server","netezza","LOG(@expression)","LN(@expression)"
"sql server","netezza","ISNULL(@a,@b)","COALESCE(@a,@b)"
"sql server","netezza","COUNT_BIG(@a)","COUNT(@a)"
"sql server","netezza","USE @schema;","SET search_path TO @schema;"
"sql server","netezza","IF OBJECT_ID('@table', 'U') IS NOT NULL DROP TABLE @table;","DROP TABLE IF EXISTS @table;"
"sql server","netezza",".dbo.","."
"sql server","netezza","CREATE TABLE #@table (@definition)","CREATE TEMP TABLE @table (@definition)"
"sql server","netezza","CREATE CLUSTERED INDEX @index_name ON @table (@variable);","CREATE INDEX @index_name ON @table (@variable);\nCLUSTER @table USING @index_name;"
"sql server","netezza","CREATE UNIQUE CLUSTERED INDEX @index_name ON @table (@variable);","CREATE UNIQUE INDEX @index_name ON @table (@variable);\nCLUSTER @table USING @index_name;"
"sql server","netezza","PRIMARY KEY NONCLUSTERED","PRIMARY KEY"
"sql server","netezza","VARCHAR(MAX)","TEXT"
"sql server","netezza","FLOAT","NUMERIC"
"sql server","netezza","WITH @a AS @b SELECT @c INTO #@d FROM @e;","CREATE TEMP TABLE @d\nAS\nWITH @a AS @b SELECT\n@c\nFROM\n@e;"
"sql server","netezza","WITH @a AS @b SELECT @c INTO @d FROM @e;","CREATE TABLE @d\nAS\nWITH @a AS @b SELECT\n@c\nFROM\n@e;"
"sql server","netezza","SELECT @a INTO #@b FROM @c;","CREATE TEMP TABLE @b\nAS\nSELECT\n@a\nFROM\n@c;"
"sql server","netezza","SELECT @a INTO @b FROM @c;","CREATE TABLE @b AS\nSELECT\n@a\nFROM\n@c;"
"sql server","netezza","#",""
